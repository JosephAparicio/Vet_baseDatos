-- Generado por Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   en:        2023-12-07 14:24:58 COT
--   sitio:      Oracle Database 11g
--   tipo:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE abastecimiento (
    id_abastecimiento VARCHAR2(10 BYTE) NOT NULL,
    fecha             DATE NOT NULL,
    id_proveedor      VARCHAR2(10 BYTE) NOT NULL,
    total_de_unidades NUMBER NOT NULL,
    id_producto       VARCHAR2(10 BYTE) NOT NULL
);

COMMENT ON COLUMN abastecimiento.id_abastecimiento IS
    'IDENTIFICADOR DEL ABASTECIMIENTO';

COMMENT ON COLUMN abastecimiento.fecha IS
    'FECHA EN QUE SE REALIZÓ EL ABASTECIMIENTO';

COMMENT ON COLUMN abastecimiento.id_proveedor IS
    'IDENTIFICADOR DEL PROVEEDOR';

COMMENT ON COLUMN abastecimiento.total_de_unidades IS
    'CANTIDADE DE UNIDADES DEL PRODUCTO ABASTECIDAS';

COMMENT ON COLUMN abastecimiento.id_producto IS
    'IDENTIFICADOR DEL PRODUCTO ABASTECIDO';

ALTER TABLE abastecimiento ADD CONSTRAINT abastecimiento_pk PRIMARY KEY ( id_abastecimiento );

CREATE TABLE cliente (
    id_cliente          NUMBER NOT NULL,
    nombre_cliente      VARCHAR2(80 BYTE) NOT NULL,
    apellido_paterno    VARCHAR2(60 BYTE) NOT NULL,
    apellido_materno    VARCHAR2(60 BYTE),
    email               VARCHAR2(50 BYTE),
    numero_telefonico   CHAR(9),
    numero_celular      CHAR(9) NOT NULL,
    telefono_secundario CHAR(9),
    fecha_nacimiento    DATE NOT NULL,
    numero_mascotas     NUMBER NOT NULL,
    estado              CHAR(1 BYTE) NOT NULL
);

COMMENT ON COLUMN cliente.id_cliente IS
    'IDENTIFICADOR DEL CLIENTE';

COMMENT ON COLUMN cliente.nombre_cliente IS
    'NOMBRE DEL CLIENTE';

COMMENT ON COLUMN cliente.apellido_paterno IS
    'APELLIDO PATERNO DEL CLIENTE';

COMMENT ON COLUMN cliente.apellido_materno IS
    'APELLIDO MATERNO DEL CLIENTE';

COMMENT ON COLUMN cliente.email IS
    'CORREO ELECTRONICO DEL CLIENTE';

COMMENT ON COLUMN cliente.numero_telefonico IS
    'NUMERO DEL TELEFONO DEL CLIENTE';

COMMENT ON COLUMN cliente.numero_celular IS
    'NUMERO DE CELULAR DEL CLIENTE';

COMMENT ON COLUMN cliente.telefono_secundario IS
    'SEGUNDO NUMERO DEL CELULAR DEL CLIENTE';

COMMENT ON COLUMN cliente.fecha_nacimiento IS
    'FECHA DE NACIMIENTO DEL CLIENTE';

COMMENT ON COLUMN cliente.numero_mascotas IS
    'CANTIDAD DE MASCOTAS DEL CLIENTE';

COMMENT ON COLUMN cliente.estado IS
    'ESTADO DEL CLIENTE. A:ACTIVO I:INACTIVO';

ALTER TABLE cliente ADD CONSTRAINT cliente_pk PRIMARY KEY ( id_cliente );

CREATE TABLE comportamiento (
    id_comportamiento NUMBER NOT NULL,
    descripcion       VARCHAR2(20 BYTE) NOT NULL
);

COMMENT ON COLUMN comportamiento.id_comportamiento IS
    'IDENTIFICADOR DEL COMPORTAMIENTO';

COMMENT ON COLUMN comportamiento.descripcion IS
    'CARACTERISTICA PRINCIPAL DEL COMPORTAMIENTO';

ALTER TABLE comportamiento ADD CONSTRAINT comportamiento_pk PRIMARY KEY ( id_comportamiento );

CREATE TABLE empleado (
    id_empleado NUMBER NOT NULL,
    nombre      VARCHAR2(120 BYTE) NOT NULL,
    cargo       VARCHAR2(60 BYTE) NOT NULL,
    dni         CHAR(8) NOT NULL
);

COMMENT ON COLUMN empleado.id_empleado IS
    'IDENTIFICADOR DEL EMPLEADO';

COMMENT ON COLUMN empleado.nombre IS
    'UN NOMBRE Y PRIMER APELLIDO DEL EMPLEADO';

COMMENT ON COLUMN empleado.cargo IS
    'NOMBRE DEL CARGO';

COMMENT ON COLUMN empleado.dni IS
    'Documento Nacional de Identidad del empleado.';

ALTER TABLE empleado ADD CONSTRAINT empleado_habilidad_pk PRIMARY KEY ( id_empleado );

CREATE TABLE entrega (
    id_entrega         VARCHAR2(10 BYTE) NOT NULL,
    id_empleado        NUMBER NOT NULL,
    fecha              DATE NOT NULL,
    hora               DATE NOT NULL,
    cantidad_entregada NUMBER NOT NULL,
    direccion          VARCHAR2(300 BYTE) NOT NULL,
    referencias        VARCHAR2(300 BYTE),
    estado_de_entrega  CHAR(1 BYTE) NOT NULL,
    costo_adicional    NUMBER(3, 2) NOT NULL,
    costo_total        NUMBER(5, 2) NOT NULL,
    metodo_de_pago     CHAR(1 BYTE) NOT NULL,
    id_venta           VARCHAR2(10 BYTE) NOT NULL,
    id_cliente         NUMBER NOT NULL
);

COMMENT ON COLUMN entrega.id_entrega IS
    'IDENTIFICADOR DE LA ENTREGA';

COMMENT ON COLUMN entrega.id_empleado IS
    'IDENTIFICADOR DEL EMPLEADO QUE REALIZA LA ENTREGA';

COMMENT ON COLUMN entrega.fecha IS
    'FECHA DE ENTREGA DEL PEDIDO';

COMMENT ON COLUMN entrega.hora IS
    'HORA DE ENTREGA DEL PEDIDO';

COMMENT ON COLUMN entrega.cantidad_entregada IS
    'CANTIDAD ENTREGADA DEL PRODUCTO';

COMMENT ON COLUMN entrega.direccion IS
    'La dirección de la entrega.';

COMMENT ON COLUMN entrega.referencias IS
    'Referencias a la dirección dada previamente.';

COMMENT ON COLUMN entrega.estado_de_entrega IS
    'Estado en el que se encuentre el pedido.
P: Pendiente.
E: Entregado
A: Anulado.';

COMMENT ON COLUMN entrega.costo_adicional IS
    'Costo adicional por el servicio de delivery.';

COMMENT ON COLUMN entrega.costo_total IS
    'Costo total que incluye el cargo adicional más el precio unitario por cantidad entregada.';

COMMENT ON COLUMN entrega.metodo_de_pago IS
    'Método de pago que usa en la venta:
C : Tarjeta de crédito o débito.
E: Efectivo.
';

ALTER TABLE entrega ADD CONSTRAINT entrega_pk PRIMARY KEY ( id_entrega );

CREATE TABLE especie (
    id_especie     NUMBER NOT NULL,
    nombre_especie VARCHAR2(10 BYTE) NOT NULL
);

COMMENT ON COLUMN especie.id_especie IS
    'IDENTIFICADOR DE LA ESPECIE';

COMMENT ON COLUMN especie.nombre_especie IS
    'NOMBRE DE LA ESPECIE';

ALTER TABLE especie ADD CONSTRAINT especie_pk PRIMARY KEY ( id_especie );

CREATE TABLE inventario (
    id_stock        VARCHAR2(10 BYTE) NOT NULL,
    id_producto     VARCHAR2(10 BYTE) NOT NULL,
    cantidad_actual NUMBER NOT NULL,
    cantidad_maxima NUMBER NOT NULL,
    cantidad_minima NUMBER NOT NULL
);

COMMENT ON COLUMN inventario.id_stock IS
    'IDENTIFICADOR DEL INVENTARIO';

COMMENT ON COLUMN inventario.id_producto IS
    'IDENTIFICADOR DEL PRODUCTO';

COMMENT ON COLUMN inventario.cantidad_actual IS
    'CANTIDAD ACTUAL DEL PRODUCTO EN EL ALMACEN';

COMMENT ON COLUMN inventario.cantidad_maxima IS
    'CANTIDAD MÁXIMA QUE SE PUEDE ALMACENAR';

COMMENT ON COLUMN inventario.cantidad_minima IS
    'CANTIDAD MINIMA NECESARIA. SI PASA POR DEBAJO DE ESTA CANTIDAD DEBEMOS ABASTECERNOS';

ALTER TABLE inventario ADD CONSTRAINT inventario_pk PRIMARY KEY ( id_stock );

CREATE TABLE mascota (
    id_mascota        NUMBER NOT NULL,
    nombre            VARCHAR2(20 BYTE),
    id_cliente        NUMBER NOT NULL,
    fecha_nacimiento  DATE NOT NULL,
    id_especie        NUMBER NOT NULL,
    id_raza           NUMBER NOT NULL,
    id_comportamiento NUMBER NOT NULL,
    informacion       VARCHAR2(200 BYTE)
);

COMMENT ON COLUMN mascota.id_mascota IS
    'IDENTIFICADOR DE LA MASCOTA';

COMMENT ON COLUMN mascota.nombre IS
    'NOMBRE DE LA MASCOTA';

COMMENT ON COLUMN mascota.id_cliente IS
    'IDENTIFICADOR DEL CLIENTE';

COMMENT ON COLUMN mascota.fecha_nacimiento IS
    'FECHA DE NACIMIENTO DE LA MASCOTA';

COMMENT ON COLUMN mascota.id_especie IS
    'IDENTIFICADOR DE LA ESPECIE';

COMMENT ON COLUMN mascota.id_raza IS
    'IDENTIFICADOR DE LA RAZA';

COMMENT ON COLUMN mascota.id_comportamiento IS
    'IDENTIFICADOR DEL COMPORTAMIENTO';

COMMENT ON COLUMN mascota.informacion IS
    'INFORMACION ADICIONAL SOBRE LA MASCOTA';

ALTER TABLE mascota ADD CONSTRAINT mascota_pk PRIMARY KEY ( id_mascota );

CREATE TABLE producto (
    id_producto     VARCHAR2(10 BYTE) NOT NULL,
    nombre          VARCHAR2(80) NOT NULL,
    id_proveedor    VARCHAR2(10 BYTE) NOT NULL,
    precio_unitario NUMBER(5, 2) NOT NULL,
    marca           VARCHAR2(60 BYTE),
    descripcion     VARCHAR2(200 BYTE)
);

COMMENT ON COLUMN producto.id_producto IS
    'IDENTIFICADOR DEL PRODUCTO';

COMMENT ON COLUMN producto.nombre IS
    'NOMBRE DEL PRODUCTO';

COMMENT ON COLUMN producto.id_proveedor IS
    'IDENTIFICADOR DEL PROVEEDOR';

COMMENT ON COLUMN producto.precio_unitario IS
    'PRECIO DE VENTA DEL PRODUCTO';

COMMENT ON COLUMN producto.marca IS
    'MARCA DEL PRODUCTO';

COMMENT ON COLUMN producto.descripcion IS
    'INFORMACION ADICIONAL DEL PRODUCTO';

ALTER TABLE producto ADD CONSTRAINT productos_pk PRIMARY KEY ( id_producto );

CREATE TABLE proveedor (
    id_proveedor   VARCHAR2(10 BYTE) NOT NULL,
    nombre         VARCHAR2(120 BYTE) NOT NULL,
    numero_celular CHAR(9) NOT NULL,
    direccion      VARCHAR2(200 BYTE) NOT NULL
);

COMMENT ON COLUMN proveedor.id_proveedor IS
    'IDENTIFICADOR DEL PROVEEDOR';

COMMENT ON COLUMN proveedor.nombre IS
    'NOMBRE DEL PROVEEDOR';

COMMENT ON COLUMN proveedor.numero_celular IS
    'NUMERO DEL CELULAR DEL PROVEEDOR';

COMMENT ON COLUMN proveedor.direccion IS
    'DIRECCION DEL PROVEEDOR';

ALTER TABLE proveedor ADD CONSTRAINT proveedor_pk PRIMARY KEY ( id_proveedor );

CREATE TABLE raza (
    id_raza     NUMBER NOT NULL,
    descripcion VARCHAR2(60 BYTE) NOT NULL,
    id_especie  NUMBER NOT NULL
);

COMMENT ON COLUMN raza.id_raza IS
    'IDENTIFICADOR DE LA RAZA';

COMMENT ON COLUMN raza.descripcion IS
    'DESCRIPCION DE RAZA DE LA MASCOTA';

COMMENT ON COLUMN raza.id_especie IS
    'IDENTIFICADOR DE LA ESPECIE';

ALTER TABLE raza ADD CONSTRAINT raza_pk PRIMARY KEY ( id_raza );

CREATE TABLE servicio_mascota (
    id_servicio_mascota NUMBER NOT NULL,
    fecha               DATE NOT NULL,
    estado              CHAR(1 BYTE) NOT NULL,
    id_mascota          NUMBER NOT NULL,
    descripcion         VARCHAR2(200 BYTE),
    id_empleado         NUMBER NOT NULL,
    id_venta            VARCHAR2(10 BYTE) NOT NULL,
    id_tipo_servicio    NUMBER NOT NULL
);

COMMENT ON COLUMN servicio_mascota.id_servicio_mascota IS
    'IDENTIFICADOR DE LA CONSULTA';

COMMENT ON COLUMN servicio_mascota.fecha IS
    'FECHA DE LA CITA';

COMMENT ON COLUMN servicio_mascota.estado IS
    'ESTADO DE LA CITA. ''A'':ACTIVO ''I'':INACTIVO';

COMMENT ON COLUMN servicio_mascota.id_mascota IS
    'IDENTIFICADOR DE LA MASCOTA';

COMMENT ON COLUMN servicio_mascota.descripcion IS
    'COMENTARIOS ADICIONALES DE LA CITA';

COMMENT ON COLUMN servicio_mascota.id_empleado IS
    'Identificador del empleado.';

ALTER TABLE servicio_mascota ADD CONSTRAINT cita_pk PRIMARY KEY ( id_servicio_mascota );

CREATE TABLE tipo_servicio (
    id_tipo_servicio NUMBER NOT NULL,
    descripcion      VARCHAR2(20) NOT NULL
);

ALTER TABLE tipo_servicio ADD CONSTRAINT tipo_servicio_pk PRIMARY KEY ( id_tipo_servicio );

CREATE TABLE venta (
    id_venta          VARCHAR2(10 BYTE) NOT NULL,
    id_cliente        NUMBER NOT NULL,
    fecha             DATE NOT NULL,
    hora              DATE NOT NULL,
    metodo_de_pago    CHAR(1 BYTE) NOT NULL,
    estado            CHAR(1 BYTE) NOT NULL,
    id_producto       VARCHAR2(10 BYTE) NOT NULL,
    unidades_vendidas NUMBER NOT NULL,
    total             NUMBER NOT NULL,
    id_empleado       NUMBER NOT NULL
);

COMMENT ON COLUMN venta.id_venta IS
    'IDENTIFICADOR DE LA VENTA';

COMMENT ON COLUMN venta.id_cliente IS
    'IDENTIFICADOR DEL CLIENTE QUE HA COMPRADO';

COMMENT ON COLUMN venta.fecha IS
    'FECHA EN LA QUE COMPRARON LOS PRODUCTOS';

COMMENT ON COLUMN venta.hora IS
    'HORA EN LA QUE SE REALIZA LA VENTA';

COMMENT ON COLUMN venta.metodo_de_pago IS
    'METODO DE PAGO. 
C : Tarjeta de crédito o débito.
E: Efectivo.
T: Transacción.';

COMMENT ON COLUMN venta.estado IS
    'Estado en la que se encuentra la venta:
C: Completada.
P: Pendiente.
A: Anulada.';

COMMENT ON COLUMN venta.id_producto IS
    'IDENTIFICADOR DE LOS PRODUCTOS VENDIDOS';

COMMENT ON COLUMN venta.unidades_vendidas IS
    'NUMERO DE UNIDADES VENDIDAS';

ALTER TABLE venta ADD CONSTRAINT transacciones_pkv1 PRIMARY KEY ( id_venta );

CREATE TABLE venta_inventario (
    id_stock VARCHAR2(10 BYTE) NOT NULL,
    id_venta VARCHAR2(10 BYTE) NOT NULL
);

ALTER TABLE abastecimiento
    ADD CONSTRAINT abastecimiento_productos_fk FOREIGN KEY ( id_producto )
        REFERENCES producto ( id_producto );

ALTER TABLE abastecimiento
    ADD CONSTRAINT abastecimiento_proveedor_fk FOREIGN KEY ( id_proveedor )
        REFERENCES proveedor ( id_proveedor );

ALTER TABLE servicio_mascota
    ADD CONSTRAINT cita_mascota_fk FOREIGN KEY ( id_mascota )
        REFERENCES mascota ( id_mascota );

ALTER TABLE entrega
    ADD CONSTRAINT entrega_cliente_fk FOREIGN KEY ( id_cliente )
        REFERENCES cliente ( id_cliente );

ALTER TABLE entrega
    ADD CONSTRAINT entrega_empleado_fk FOREIGN KEY ( id_empleado )
        REFERENCES empleado ( id_empleado );

ALTER TABLE entrega
    ADD CONSTRAINT entrega_venta_fk FOREIGN KEY ( id_venta )
        REFERENCES venta ( id_venta );

ALTER TABLE inventario
    ADD CONSTRAINT inventario_producto_fk FOREIGN KEY ( id_producto )
        REFERENCES producto ( id_producto );

ALTER TABLE mascota
    ADD CONSTRAINT mascota_cliente_fk FOREIGN KEY ( id_cliente )
        REFERENCES cliente ( id_cliente );

ALTER TABLE mascota
    ADD CONSTRAINT mascota_comportamiento_fk FOREIGN KEY ( id_comportamiento )
        REFERENCES comportamiento ( id_comportamiento );

ALTER TABLE mascota
    ADD CONSTRAINT mascota_especie_fk FOREIGN KEY ( id_especie )
        REFERENCES especie ( id_especie );

ALTER TABLE mascota
    ADD CONSTRAINT mascota_raza_fk FOREIGN KEY ( id_raza )
        REFERENCES raza ( id_raza );

ALTER TABLE producto
    ADD CONSTRAINT productos_proveedor_fk FOREIGN KEY ( id_proveedor )
        REFERENCES proveedor ( id_proveedor );

ALTER TABLE raza
    ADD CONSTRAINT raza_especie_fk FOREIGN KEY ( id_especie )
        REFERENCES especie ( id_especie );

ALTER TABLE servicio_mascota
    ADD CONSTRAINT servicio_empleado_fk FOREIGN KEY ( id_empleado )
        REFERENCES empleado ( id_empleado );

ALTER TABLE servicio_mascota
    ADD CONSTRAINT servicio_mascota_tipo_fk FOREIGN KEY ( id_tipo_servicio )
        REFERENCES tipo_servicio ( id_tipo_servicio );

ALTER TABLE servicio_mascota
    ADD CONSTRAINT servicio_mascota_venta_fk FOREIGN KEY ( id_venta )
        REFERENCES venta ( id_venta );

ALTER TABLE venta
    ADD CONSTRAINT venta_empleado_fk FOREIGN KEY ( id_empleado )
        REFERENCES empleado ( id_empleado );

ALTER TABLE venta_inventario
    ADD CONSTRAINT venta_inventario_inventario_fk FOREIGN KEY ( id_stock )
        REFERENCES inventario ( id_stock );

ALTER TABLE venta_inventario
    ADD CONSTRAINT venta_inventario_venta_fk FOREIGN KEY ( id_venta )
        REFERENCES venta ( id_venta );



-- Informe de Resumen de Oracle SQL Developer Data Modeler: 
-- 
-- CREATE TABLE                            15
-- CREATE INDEX                             0
-- ALTER TABLE                             33
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
